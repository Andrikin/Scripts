#!/usr/bin/env bash
# TODO - Fazer mais interações com mplayer em estado "slave" 

# Dmenu_player cria um menu interativo para busca e interação básica com arquivos de música (dentro da pasta ~/Música/)
# Músicas que tenham o mesmo nome irão entrar em conflito , não tocando nenhuma delas - SOLUÇÃO renomear de forma diferente ;P

init_variables(){
	NOME_SCRIPT="${1##*/}"
	DMENU_PASTA="$HOME/.local/share/$NOME_SCRIPT"
	MUSICAS_PASTA="$HOME/Música/"
	CMD_FIFO_FILE="/tmp/mplayer-fifo"
	PLAY=(mplayer -really-quiet -quiet -slave -input file="$CMD_FIFO_FILE")
	MUSIC_PLAYING=$(pgrep -a "^${PLAY[0]}")
	# Arquivos usados
	LISTA_DE_MUSICAS="$DMENU_PASTA/lista_de_musicas_completa.dmenu"
	IS_NEXT_SONG="$DMENU_PASTA/is_next_song.dmenu"
	MODULO="$DMENU_PASTA/modulo.dmenu"
	PASTAS_COM_MUSICAS="$DMENU_PASTA/pastas_de_musicas.dmenu"
	REPEAT="$DMENU_PASTA/repeat.dmenu"
	PAUSED="$DMENU_PASTA/paused.dmenu"
	# Keys
	KEY_DMENU_PLAYER_PLAY=p
	KEY_DMENU_PLAYER_STOP=s
	KEY_DMENU_PLAYER_REPEAT=r
	KEY_DMENU_PLAYER_KILL_MUSIC=x
	KEY_DMENU_PLAYER_NEXT=n
	KEY_DMENU_PLAYER_PREVIOUS=b
	KEY_DMENU_PLAYER_QUIT_PLAYLIST=q
}

update_songs_list() {
	# Captura todas as músicas nos formatos flac, ogg, mp3
	du -a "$MUSICAS_PASTA" | cut -f2 | grep --color=never ".flac\|.mp3\|.ogg\|.oga" > "$LISTA_DE_MUSICAS"
	# Captura todas as pastas dentro da pasta ~/Música/
	du "$MUSICAS_PASTA"* | cut -f2 > "$PASTAS_COM_MUSICAS"
}

redraw_statusbar(){
	polybar-msg hook music_playing 1
}

# $1=MUSICA
player() {
	redraw_statusbar
	"${PLAY[@]}" "$1"
	while (( $(< "$REPEAT") ))
	do
		"${PLAY[@]}" "$1"
	done
}

pause_song(){
	echo "pause" > "$CMD_FIFO_FILE"
	toggle_paused
}

reset_to_next_song(){
	echo '1' > "$IS_NEXT_SONG"
}

player_playlist(){
	local songs=("$@")
	local index=0
	reset_to_next_song
	while (( $index < ${#songs[@]} ))
   	do
		player "${songs[$index]}"
		# 0=false; other value=true
		if (( $(< "$IS_NEXT_SONG") ))
		then
			((index++))
		else
			((index--))
			reset_to_next_song
		fi
	done
}

toggle_repeat(){
	((i=$(< "$REPEAT")>0?0:1)) 
	echo "$i" > "$REPEAT"
	redraw_statusbar
}

toggle_paused(){
	((i=$(< "$PAUSED")>0?0:1)) 
	echo "$i" > "$PAUSED"
	redraw_statusbar
}

reset_statusbar(){
	echo '0' > "$REPEAT"
	echo '0' > "$PAUSED"
	redraw_statusbar
}

# $1=ARQUIVO_LISTA; $2=MÓDULO
playlist_queue(){
	MENU_DMENU_ROWS=10
	echo "$2" > "$MODULO"
	echo "0" > "$REPEAT"
	# Sempre observar a necessidade de usar IFS (valor padrão <space><tab><newline>) quando criar listas de comandos
	local IFS=$'\n'
	local songs_list=($(shuf < "$1"))
	local choose=
	local songs=()
	if (( $2 ))
	then
		choose=$(dmenu_command_menu "Escolha uma música:" "${songs_list[@]##*/}")
		# Se não for escolhida nenhuma música, encerrar o script
		[[ -z $choose ]] && exit 0
		songs+=($(grep --color=never "$choose$" "$1"))
		player "${songs[@]}"
	else
		choose=$(dmenu_command_menu "Escolha uma das pastas de música:" "${songs_list[@]##*/}")
		# Se nenhuma playlist for escolhida, encerrar o script
		[[ -n $choose ]] && notify-send -t 6000 "${NOME_SCRIPT^^}" "Escutando músicas da pasta: $choose" || exit 0
		songs+=($(shuf < <(grep --color=never "$choose/" "$LISTA_DE_MUSICAS")))
		player_playlist "${songs[@]}"
	fi
	redraw_statusbar
}

# $1=WHAT_TO_KILL
# 0=script; other_value=song
process_kill(){
	if (( $1 ))
	then
		pkill -f "^${PLAY[0]}" &
	else
		pkill -f "^${PLAY[0]}|^bash.*${NOME_SCRIPT}$" &
	fi
	reset_statusbar
}

# 1=PROXIMA MÚSICA; 0=MÚSICA ANTERIOR
# kill song
tracking_music(){
	reset_statusbar
	[[ $(< "$IS_NEXT_SONG") != $1 ]] && echo "$1" > "$IS_NEXT_SONG"
	process_kill "1"
}

init_files(){
	# Criando arquivo e diretórios
	[[ ! -p "$CMD_FIFO_FILE" ]] && mkfifo "$CMD_FIFO_FILE"
	[[ ! -d $DMENU_PASTA ]] && mkdir "$DMENU_PASTA"
	[[ ! -e "$LISTA_DE_MUSICAS" ]] && update_songs_list
}

run_dmenu(){
	dmenu -i -f -l "$MENU_DMENU_ROWS" -fn "Source Code Pro Medium:size=14"
}

dmenu_command_menu(){
	printf '%s\n' "$@" | run_dmenu
}

dmenu_options(){
	if [[ -z $MUSIC_PLAYING ]]
   	then
		MENU_DMENU=("[1] - [Procurar por Música]" "[2] - [Escolher por Músicas por Pasta]" "[3] - [Atualizar lista de Músicas]")
	else
		if (( $(< "$MODULO") ))
		then
			MENU_DMENU=("[$KEY_DMENU_PLAYER_PLAY/$KEY_DMENU_PLAYER_STOP] - [Play!/Stop!]" "[$KEY_DMENU_PLAYER_REPEAT] - [Repeat!]" "[$KEY_DMENU_PLAYER_KILL_MUSIC] - [Parar Música!]")
		else
			MENU_DMENU=("[$KEY_DMENU_PLAYER_PLAY/$KEY_DMENU_PLAYER_STOP] - [Play!/Stop!]" "[$KEY_DMENU_PLAYER_REPEAT] - [Repeat!]" "[$KEY_DMENU_PLAYER_NEXT] - [Próxima Música!]" "[$KEY_DMENU_PLAYER_PREVIOUS] - [Música Anterior!]" "[$KEY_DMENU_PLAYER_QUIT_PLAYLIST] - [Encerrar Playlist!]")
		fi
	fi
	MENU_DMENU_ROWS=$(( ${#MENU_DMENU[@]} + 1 ))
}

dmenu_main_menu(){
	dmenu_options
	MAIN_MENU=$(dmenu_command_menu "${NOME_SCRIPT^^} - MENU:" "${MENU_DMENU[@]}")
	[[ -z $MAIN_MENU ]] && exit 0
	case "${MAIN_MENU:1:1}" in
		1) 
			playlist_queue "$LISTA_DE_MUSICAS" "1";;
		2) 
			playlist_queue "$PASTAS_COM_MUSICAS" "0";;
		3) 
			update_songs_list;;
		$KEY_DMENU_PLAYER_PLAY|$KEY_DMENU_PLAYER_STOP) 
			pause_song;;
		$KEY_DMENU_PLAYER_REPEAT) 
			toggle_repeat;;
		$KEY_DMENU_PLAYER_QUIT_PLAYLIST) 
			process_kill "0";;
		$KEY_DMENU_PLAYER_KILL_MUSIC|$KEY_DMENU_PLAYER_NEXT) 
			tracking_music "1";;
		$KEY_DMENU_PLAYER_PREVIOUS) 
			tracking_music "0";;
		*) 
			notify-send -u critical -t 3250 "${NOME_SCRIPT^^}" "Comando não reconhecido!" & exit 0;;
	esac
}

main(){
	init_variables "$0"
	init_files
	dmenu_main_menu
}

main
