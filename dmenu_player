#!/usr/bin/env bash

# TODO - Repeat

# pacmd set-sink-mute alsa_output.pci-0000_00_1b.0.analog-stereo 1 (mute)

# Dmenu_player cria um menu interativo para busca e interação básica com arquivos de música (dentro da pasta ~/Música/).
# Músicas que tenham o mesmo nome irão entrar em conflito , não tocando nenhuma delas - SOLUÇÃO renomear de forma diferente ;P

dmenu_init_variables(){
	NOME_SCRIPT="${1##*/}"
	DMENU_PASTA="$HOME"/.local/share/"$NOME_SCRIPT"
	MUSICAS_PASTA="$HOME"/Música/

	# Arquivos usados
	LISTA_DE_MUSICAS="$DMENU_PASTA"/lista_de_musicas_completa.dmenu
	INDICE="$DMENU_PASTA"/indice_playlist.dmenu
	MODULO="$DMENU_PASTA"/modulo.dmenu
	PASTAS_COM_MUSICAS="$DMENU_PASTA"/pastas_de_musicas.dmenu

	# Keys
	KEY_DMENU_PLAYER_PLAY=p
	KEY_DMENU_PLAYER_STOP=s
	KEY_DMENU_PLAYER_KILL_MUSIC=x
	KEY_DMENU_PLAYER_NEXT=n
	KEY_DMENU_PLAYER_PREVIOUS=b
	KEY_DMENU_PLAYER_QUIT_PLAYLIST=q

	# Player utilizado
	PLAY=(mplayer -really-quiet)

	# Mostra título da música no Dmenu
	MUSICA_TOCANDO=$(pgrep -a "^${PLAY[0]}")

	# Identifica corretamente o ID do processo que pertence à música
	ID_MUSICA=${MUSICA_TOCANDO%% *}
}

# $1=MENSAGEM_PROMPT
run_dmenu_command(){
	dmenu_lines
	dmenu -i -f -l "$LINHAS"
}


# Função que atualiza o arquivo das músicas
atualizar_listas_de_musicas() {
	local buscar=".flac\|.mp3\|.ogg\|.oga"
	# Captura todas as músicas nos formatos flac, ogg, mp3
	du -a "$MUSICAS_PASTA" | cut -f2 | grep --color=never $buscar > "$LISTA_DE_MUSICAS"
	# Captura todas as pastas dentro da pasta ~/Música/
	du "$MUSICAS_PASTA"* | cut -f2 > "$PASTAS_COM_MUSICAS"

}

atualizar_statusbar(){
	polybar-msg hook music_playing 1
}

# $1=MUSICA
player() {
	atualizar_statusbar
	"${PLAY[@]}" "$1"
}

reset_playlist_indice(){
	echo '0' > "$INDICE"
}

player_playlist(){
	local musicas=("$@")
	local num=0
	reset_playlist_indice
	while (( $num <= ${#musicas[@]} ))
   	do
		player "${musicas[$num]}"

		if [[ $(< "$INDICE") == 0 ]]
		then
			((num++))
		else
			((num--))
			reset_playlist_indice
		fi
	done
}

tocar_musica() {
	# Utiliza Dmenu para abrir um arquivo individualmente
	# Registrando módulo
	echo '1' > "$MODULO"
	# Sempre observar a necessidade de usar IFS (valor padrão <space><tab><newline>) quando criar listas de comandos
	local IFS=$'\n'
	local todas_musicas=($(shuf < "$LISTA_DE_MUSICAS"))
	local musica_escolhida=$(printf '%s\n' "Escolha uma música:" "${todas_musicas[@]##*/}" | run_dmenu_command)

	# Se não for escolhida nenhuma música, encerrar o script
	[[ $musica_escolhida = '' ]] && exit 0

	local musica=$(grep --color=never "$musica_escolhida$" "$LISTA_DE_MUSICAS")
	player "$musica"
	atualizar_statusbar
}

tocar_playlist() {
	# Abrindo Dmenu com opções de "playlist", sendo estas as pastas dentro de Música/
	# Registrando módulo
	echo '2' > "$MODULO"
	local IFS=$'\n'
	local pastas=($(shuf < "$PASTAS_COM_MUSICAS"))
	local escolher_playlist=$(printf '%s\n' "Escolha uma das pastas de música:" "${pastas[@]##*/}" | run_dmenu_command)

	# Se nenhuma playlist for escolhida, encerrar o script
	[[ $escolher_playlist != '' ]] && notify-send -t 6000 "${NOME_SCRIPT^^}" "Escutando músicas da pasta: $escolher_playlist" || exit 0

	local caminho_completo_pasta=$(grep --color=never "$escolher_playlist$" "$PASTAS_COM_MUSICAS")
	local musicas_da_pasta=($(ls "$caminho_completo_pasta"/*.{oga,ogg,flac,mp3} 2> /dev/null | shuf))
	player_playlist "${musicas_da_pasta[@]}"
	atualizar_statusbar
}

parar_musica(){
	pkill -f "^${PLAY[0]}" &
}

# 0=PROXIMA MÚSICA; 1=MÚSICA ANTERIOR
tracking_musica(){
	[[ $(< "$INDICE") != $1 ]] && echo "$1" > "$INDICE"
	parar_musica
	atualizar_statusbar
}

eliminar_playlist(){
	pkill -f "^${PLAY[0]}|^bash.*${NOME_SCRIPT}$" &
	atualizar_statusbar
}

init_files(){
	# Criando arquivo que conterá todas as músicas da pasta /home/andre/Música - Primeira operação realizada
	[[ ! -e "$LISTA_DE_MUSICAS" ]] && atualizar_listas_de_musicas
}

dmenu_options(){
	# Opções do Dmenu
	if [[ $MUSICA_TOCANDO == '' ]]
   	then
		MENU_DMENU=("[1] - [Procurar por Música]" "[2] - [Escolher por Músicas por Pasta]" "[3] - [Atualizar lista de Músicas]")
	else
		# Dmenu's diferentes para "playlist" e música "solo"
		case "$(< "$MODULO")" in
			1)MENU_DMENU=("[$KEY_DMENU_PLAYER_PLAY] - [Play!]" "[$KEY_DMENU_PLAYER_STOP] - [Stop!]" "[$KEY_DMENU_PLAYER_KILL_MUSIC] - [Parar Música!]" "[] - [Playing: \"${MUSICA_TOCANDO##*/}\"]");;
			2)MENU_DMENU=("[$KEY_DMENU_PLAYER_PLAY] - [Play!]" "[$KEY_DMENU_PLAYER_STOP] - [Stop!]" "[$KEY_DMENU_PLAYER_NEXT] - [Próxima Música!]" "[$KEY_DMENU_PLAYER_PREVIOUS] - [Música Anterior!]" "[$KEY_DMENU_PLAYER_QUIT_PLAYLIST] - [Encerrar Playlist!]" "[] - [Playing: \"${MUSICA_TOCANDO##*/}\"]");;
		esac
	fi
}

dmenu_lines(){
	# Número de "entradas" do menu - Dmenu
	if [[ ${#MENU_DMENU[@]} -lt 5 ]]
   	then
		LINHAS=5
	else
		LINHAS="${#MENU_DMENU[@]}"
	fi
}

dmenu_main_menu(){
	dmenu_options
	MAIN_MENU=$(printf '%s\n' "Escolha uma das opçoes:" "${MENU_DMENU[@]}" | run_dmenu_command)
	[[ $MAIN_MENU == '' ]] && exit 0

	# Controle das ações do dmenu_player
	case "${MAIN_MENU:1:1}" in
		# Procurar Música
		1) 
			tocar_musica
		;;
		# Tocar Músicas de Pasta
		2) 
			tocar_playlist
		;;
		# Atualizar Lista de Músicas
		3) 
			atualizar_listas_de_musicas
		;;
		# Play
		$KEY_DMENU_PLAYER_PLAY) 
			kill -cont "$ID_MUSICA"
		;;
		# Stop
		$KEY_DMENU_PLAYER_STOP) 
			kill -stop "$ID_MUSICA"
		;;
		# Encerra playlist
		$KEY_DMENU_PLAYER_QUIT_PLAYLIST) 
			eliminar_playlist
		;;
		# Next/Eliminar a música atual
		$KEY_DMENU_PLAYER_KILL_MUSIC|$KEY_DMENU_PLAYER_NEXT) 
			tracking_musica "0"
		;;
		# Previous
		$KEY_DMENU_PLAYER_PREVIOUS) 
			tracking_musica "1"
		;;
		# Default
		*) 
			notify-send -u critical -t 3250 "${NOME_SCRIPT^^}" "Comando não reconhecido!" & exit 0
		;;
esac
}

main(){
	dmenu_init_variables "$0"
	init_files
	dmenu_main_menu
}

main
