#!/usr/bin/env bash

# TODO - Videos podem conter embedded subtiles [como utilizar isto? Arquivos mkv possuem subtitles] [ffplay -vf subtitles=input.mkv:stream_index=2 input.mkv], Criar um script para fazer download automático de subtitles - Utilizar OpenSubtitlesDownload.py!
# [ffmpeg -i Movie.mkv -map 0:s:0 subs.srt] - retira embbeded subtitle pelo index

# Script para abrir arquivos de vídeo com subtítulos usando ffmpeg

init_variables(){
	VIDEO="$1"
	ARQUIVO="${1%.*}"
	ARQUIVO_SRT="${1/${1##*.}/srt}"
	PLAY=(ffplay -loglevel quiet -autoexit -i)
}

get_subtitle(){
	OpenSubtitlesDownload.py "$1" && notify_sucess "$?" || true
}

get_file_size(){
	ARQUIVO_TAMANHO=$(du -h "$1" | cut -f1)
}

notify_sucess(){
	local time=7000
	case "$1" in
		0)
			notify-send -t "$time" "FFVIDEO" "[Sucesso]: Legenda baixada com sucesso!"
			;;
		1)
			notify-send -t "$time" "FFVIDEO" "[Sucesso]: Porém legenda não encontrada!"
			;;
		2)
			notify-send -u critical -t "$time" "FFVIDEO" "Falha!"
			;;
	esac
}

download_subtitle(){
	get_file_size "$1"
	if [[ $ARQUIVO_TAMANHO == *G ]] && [[ ! -e $ARQUIVO_SRT ]]
	then
		get_subtitle "$1"
		to_utf8 "$ARQUIVO"
	fi
}

# Atualiza o status bar
atualizar_statusbar(){
	polybar-msg hook music_playing 1
}

# $1=$ARQUIVO
# Verifica a codificação do arquivo .srt e converter para UTF-8
to_utf8(){
	local sub_file=$(ls "$1".{sub,srt,ass,idx,ssa,vtt,ttml} 2> /dev/null) #|| return 0
	local temp_file="$1-temp.${sub_file##*.}"
	local char_code=$(chardet3 "$sub_file" | sed "s/^.*:\ //g" | cut -d' ' -f1)

	if [[ $char_code != utf-8 ]]
	then
		iconv -f "$char_code" -t UTF-8 "$sub_file" -o "$temp_file"
		[[ $sub_file != *.srt ]] && ffmpeg -i "$temp_file" "$1".srt 
	fi
	[[ -e $temp_file ]] && rm "$sub_file"
	[[ -e $1.srt ]] && rm "$temp_file" || mv "$temp_file" "$1".srt
}

run_cmd_play(){
	atualizar_statusbar
	# Problema com espaço? Sim, comandos que precisam interpretar "espaço" ou outros caracteres precisam ser "quotados"
	"${PLAY[@]}" "$VIDEO"
}

play(){
	# Verificar se arquivo srt existe, caso contrário, rodar o vídeo sem
	if [[ ! -e $ARQUIVO_SRT ]]
	then
		run_cmd_play
	else
		PLAY+=(-vf subtitles="$ARQUIVO_SRT")
		run_cmd_play
	fi
	atualizar_statusbar
}

main(){
	init_variables "$1"
	# Download legenda. Se não encontrar, continuar com reprodução do vídeo
	download_subtitle "$VIDEO"
	play
}

main "$@"
