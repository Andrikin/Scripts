#!/usr/bin/env bash
# Utiliza os programas SoX e FFMpeg
# Dmenu_flac cria um menu interativo para busca e interação básica com arquivos de música (e audio em gerali).
# TODO - shuffle, repeat, ao iniciar uma nova música parar a que está em execução.
# Músicas que tenham o mesmo nome irão entrar em conflito (comando "find"), não tocando nenhuma delas - SOLUÇÃO renomear de forma diferente

# Arquivos usados
lista_de_musicas="$HOME"/.local/share/dmenu_flac/listas_musicas.txt
arquivo_indice="$HOME"/.local/share/dmenu_flac/indice_playlist.txt

update_music() {
	(find "$HOME"/Música/ -name *.flac > "$lista_de_musicas" && find "$HOME"/Música/ -name *.mp3 >> "$lista_de_musicas")
}

# Criando arquivo que conterá todas as músicas da pasta /home/andre/Música
[[ ! -e "$lista_de_musicas" ]] && {
	update_music
}
	
# Programa usado para tocar as músicas (Faz parte do pacote SoX)
programaFLAC=play
programaMP3=ffplay

# Mostra título da música no Dmenu
song=$(pgrep -a "$programaFLAC" | sed "s/.*\/\(.*\)$/Playing: \"\1\"/g")

# Opções do Dmenu
if [[ $(pgrep "$programaFLAC") == '' ]]; then
	menu_dmenu=("ProcurarMúsica" "TocarMúsicasPasta" "AtualizarLista")
else
	menu_dmenu=("Play" "Stop" "EncerrarPlaylist" "ProcurarMúsica" "TocarMúsicasPasta" "Next/EliminarMúsica" "Previous" "AtualizarLista" "$song")
fi

# Número de "entradas" do menu - Dmenu
if [[ ${#menu_dmenu[@]} -lt 5 ]]; then
	linhas=5
else
	linhas="${#menu_dmenu[@]}"
fi

action=$(printf '%s\n' "${menu_dmenu[@]}" | dmenu $* -p "Escolha uma das opçoes:" -b -i -f -l "$linhas" -fn "Source Code Pro Medium" -nb "#080808" -nf "#d7d7d7" -sb "#d7d7d7" -sf "#080808")

# Identifica corretamente o ID do processo que pertence à música
id_flac=$(pgrep "$programaFLAC")

play_music() {
	if [[ $1 != *.mp3 ]]; then
		play "$1"
	else
		ffplay -loglevel quiet -nodisp -autoexit "$1"
	fi
}

abrir_arquivo() {
	# Utiliza Dmenu para abrir um arquivo individualmente

	# Cria um array "arquivos" passando as linhas do arquivo como variáveis (comando para arquivos)
	mapfile -t arquivos < "$lista_de_musicas"
	# Captura os nomes das músicas para uso do Dmenu
	local nome_arquivos+=("$(sed "s/^.*\/\(.*\)$/\1/g" "$lista_de_musicas")")
	# Captura música
	 local nome_escolhido_arquivo=$(printf '%s' "${nome_arquivos[@]}" | dmenu $* -p "Escolha uma música:" -b -i -f -l "$linhas" -fn "Source Code Pro Medium" -nb "#080808" -nf "#d7d7d7" -sb "#d7d7d7" -sf "#080808")

	# Busca exatamente pelo "pattern" passado
	local caminho_completo=$(find "$HOME"/Música/ -name "$nome_escolhido_arquivo")
	play_music "$caminho_completo"
}

# Abrindo Dmenu com opções de "playlist", sendo estas as pastas dentro de Música/
playlist() {

	# Obtendo array com os nomes das pastas
	local pastas=$(find "$HOME"/Música/ -type d -regex '^.*$' | sed "/\/$/d" | sed "s/^.*\/\(.*\)/\1/g")

	# Dmenu
	local escolher_playlist=$(printf '%s\n' "${pastas[@]}" | dmenu $* -p "Escolha uma das opçoes:" -b -i -f -l "$linhas" -fn "Source Code Pro Medium" -nb "#080808" -nf "#d7d7d7" -sb "#d7d7d7" -sf "#080808")

	# Encontrar o endereço da pasta escolhida
	local caminho_completo_pasta=$(find "$HOME"/Música/ -type d -name "$escolher_playlist")

	# Método bom para criar um array - Lista as músicas que estão na pasta com endereço correto
	local num=0
	while read musica; do
		case ${musica#*.} in
			flac|mp3)musicas_pasta[num]="$musica"
			((num++));;
		esac
	# Comando redirecionado que "alimentará" o while
	done < <(find "$caminho_completo_pasta" -maxdepth 1 -type f -regex '^.*$')

	# Inicia o índice do array com o valor "0"
	printf '%s' "0" > "$arquivo_indice"

	while [[ $(cat "$arquivo_indice") -lt ${#musicas_pasta[@]} ]]; do
		play_music "${musicas_pasta["$(cat "$arquivo_indice")"]}"
		# Atualiza indice no "arquivo_indice"
		printf '%s' "$(("$(cat "$arquivo_indice")" + 1))" > "$arquivo_indice"
	done
}

next_playlist() {
	pkill "$programaFLAC"
}

previous_playlist() {
	# O que acontece quando o índice é negativo? Como em Python, assumem valores no final do array, sentido contrário
	printf '%s' "$(("$(cat "$arquivo_indice")" - 2))" > "$arquivo_indice"
	pkill "$programaFLAC"
}

case "$action" in
	# Play
	Play) kill -cont "$id_flac";;
	# Stop
	Stop) kill -stop "$id_flac";;
	# ProcurarMúsica
	ProcurarMúsica) abrir_arquivo;;
	# TocarMúsicasPasta
	TocarMúsicasPasta) playlist;;
	# EncerrarMúsica
	EncerrarPlaylist) pkill -fx "bash "$HOME"/.local/bin/dmenu_flac" & pkill "$programaFLAC";;
	# EliminarMúsica
	#EliminarMúsica) next_playlist;;
	# Next/EliminarMúsica
	Next*)next_playlist;;
	# Previous
	Previous)previous_playlist;;
	# AtualizarLista
	AtualizarLista) update_music;;
esac

# Comandos desatualizados (Código descartado)

# Comando trocado por "sed" (MUITO mais rápido!)
#for arquivo in "${arquivos[@]}"; do
#	nome_arquivos+=("$(printf '%s\n' "$arquivo" | sed "s/^.*\/\(.*\)$/\1/g")")
#done
